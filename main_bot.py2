from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª
async def evening_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –¢–æ–ª—å–∫–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
    allowed_user_id = @a_llquestions  # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram user ID

    if update.effective_user.id != allowed_user_id:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    keyboard = [
        [InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 1", callback_data="card1"),
         InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 2", callback_data="card2")],
        [InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 3", callback_data="card3"),
         InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 4", callback_data="card4")],
        [InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 5", callback_data="card5"),
         InlineKeyboardButton("–ö–∞—Ä—Ç–∞ 6", callback_data="card6")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id='@eto_vse_ty',
        text="‚ú® –ß—Ç–æ –∂–¥—ë—Ç —Ç–µ–±—è –≤–µ—á–µ—Ä–æ–º?\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ 6 –∫–∞—Ä—Ç –Ω–∏–∂–µ üëá",
        reply_markup=reply_markup
    )

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    responses = {
        "card1": "üåô –í–µ—á–µ—Ä –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ.",
        "card2": "‚ú® –¢—ã –ø–æ–ª—É—á–∏—à—å –∑–Ω–∞–∫. –û–Ω –±—É–¥–µ—Ç –º—è–≥–∫–∏–º, –Ω–æ —Ç–æ—á–Ω—ã–º.",
        "card3": "üí´ –í–µ—á–µ—Ä –æ–±–Ω–∏–º–µ—Ç —Ç–µ–±—è –Ω–µ–∂–Ω–æ—Å—Ç—å—é. –¢—ã –Ω–µ –æ–¥–Ω–∞.",
        "card4": "üî• –£–π–¥—ë—Ç —Ç–æ, —á—Ç–æ –º–µ—à–∞–ª–æ. –°—Ç–∞–Ω–µ—Ç —Ç–∏—à–µ –≤–Ω—É—Ç—Ä–∏.",
        "card5": "üåå –•–æ—á–µ—Ç—Å—è –ø–æ–±—ã—Ç—å —Å —Å–æ–±–æ–π ‚Äî —ç—Ç–æ –±—É–¥–µ—Ç —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ.",
        "card6": "üå∫ –°–µ—Ä–¥—Ü–µ —É—Å–ª—ã—à–∏—Ç —Ç–æ, —á—Ç–æ –¥–∞–≤–Ω–æ –∂–¥–∞–ª–æ."
    }

    message = responses.get(query.data, "‚ú® –í–µ—á–µ—Ä –ø–æ–ª–æ–Ω —Ç–∞–π–Ω...")
    await query.message.reply_text(message)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
app = ApplicationBuilder().token("–¢–í–û–ô_–¢–û–ö–ï–ù").build()
app.add_handler(CommandHandler("–≤–µ—á–µ—Ä", evening_post))
app.add_handler(CommandHandler("start", lambda u, c: u.message.reply_text("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")))
app.add_handler(CommandHandler("help", lambda u, c: u.message.reply_text("–ö–æ–º–∞–Ω–¥–∞: /–≤–µ—á–µ—Ä ‚Äî –≤—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç")))
app.add_handler(CommandHandler("test", lambda u, c: u.message.reply_text(str(u.effective_user.id))))  # –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
app.add_handler(CommandHandler("stop", lambda u, c: u.message.reply_text("–ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")))
app.add_handler(CommandHandler("ping", lambda u, c: u.message.reply_text("–ñ–∏–≤–æ–π!")))
app.add_handler(CommandHandler("id", lambda u, c: u.message.reply_text(f"–í–∞—à ID: {u.effective_user.id}")))
app.add_handler(CommandHandler("buttons", evening_post))
app.add_handler(CommandHandler("cards", evening_post))
app.add_handler(CommandHandler("go", evening_post))
app.add_handler(CommandHandler("–ø–æ—Å—Ç", evening_post))
app.add_handler(CommandHandler("—Ä–∞—Å–∫–ª–∞–¥", evening_post))

app.add_handler(CommandHandler("ping", lambda u, c: u.message.reply_text("‚úÖ –Ø –Ω–∞ —Å–≤—è–∑–∏!")))

from telegram.ext import CallbackQueryHandler
app.add_handler(CallbackQueryHandler(handle_callback))

app.run_polling()